{
  "env": {
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-type-checked"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.eslint.json"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    // Enforce explicit return types on exported functions
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    
    // Disallow throwing anything other than Error objects
    "@typescript-eslint/no-throw-literal": "error",
    "no-throw-literal": "error",
    
    // Strict boolean expressions
    "@typescript-eslint/strict-boolean-expressions": ["warn", {
      "allowString": false,
      "allowNumber": false,
      "allowNullableObject": false,
      "allowNullableBoolean": false,
      "allowNullableString": false,
      "allowNullableNumber": false
    }],
    
    // Warn about always-true or always-false conditions
    "@typescript-eslint/no-unnecessary-condition": "warn",
    
    // Disallow unsafe operations
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    
    // Prevent common mistakes with Promises
    "@typescript-eslint/no-misused-promises": ["error", {
      "checksVoidReturn": {
        "attributes": false
      }
    }],
    
    // Additional TypeScript conventions
    "@typescript-eslint/prefer-nullish-coalescing": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/consistent-type-imports": ["warn", {
      "prefer": "type-imports",
      "disallowTypeAnnotations": false
    }],
    
    // Custom rules for Result pattern enforcement (commented out until plugin setup)
    // "local-rules/enforce-result-pattern": "warn",
    
    // Existing rules
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/restrict-template-expressions": "off"
  }
}